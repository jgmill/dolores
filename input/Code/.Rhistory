cluster.list[[j]] = names(which.min(rowSums(distancematrix[memb, memb])))
}
unlist(cluster.list)
}
# Determine the number of clusters
clusters = cutree(clus, k = no.cluster)
# Get Ward's centroids: Use for k mean initialization
centroids = clust.centroid(dat.germany.tr, clusters)
# Run k means on extracted centroids
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.centroid   <-  cluster.k$centers
# Oberve change of cluster membership
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
# Get medoids
cluster.medoid.IND  = clust.medoid(distancematrix = as.matrix(Dis.ecl), clusters.IND = final.memb)
cluster.medoid.wind = data.frame(t(dat.germany.wind[-c(1:2),paste0("outputV", cluster.medoid.IND)]))
cluster.medoid.pv   = data.frame(t(dat.germany.pv[-c(1:2), paste0("outputV", cluster.medoid.IND)]))
colnames(cluster.medoid.wind) = dat.germany.wind[-c(1:2),]$hour
colnames(cluster.medoid.pv)   = dat.germany.pv[-c(1:2),]$hour
# Get centroids
cluster.centroid.wind = data.frame(cluster.centroid[,1:8760])
cluster.centroid.pv   = data.frame(cluster.centroid[,8761:17520])
colnames(cluster.centroid.wind) = dat.germany.wind[-c(1:2),]$hour
colnames(cluster.centroid.pv)   = dat.germany.pv[-c(1:2),]$hour
# Export medoid/centroids membership to dataframe
if (cluster.export.centroid){
write.csv(cluster.centroid.wind, file = paste0(file.path.export, "/", "wind.centroids", no.cluster, "_", year))
write.csv(cluster.centroid.pv,   file = paste0(file.path.export, "/", "pv.centroids", no.cluster, "_", year))
} else {
write.csv(cluster.medoid.wind, file = paste0(file.path.export, "/", "wind.medoids", no.cluster, "_", year))
write.csv(cluster.medoid.pv,   file = paste0(file.path.export, "/", "pv.medoids", no.cluster, "_", year))
}
rm(list=ls())
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = '13acaa28b1df03989474169c5e959dc6014382fb'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
lon = dat.coordinates$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
View(dat.coordinates)
dat.germany.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
dat.germany.wind    = rbind(
c(NA,as.character(dat.coordinates$lat)),
c(NA,as.character(dat.coordinates$lon)),
dat.germany.wind.ts)
write.csv(dat.germany.wind, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
lon = dat.coordinates$lon
no.obs = length(lat)
dat.germany.pv.ts = ninja_aggregate_solar(lat = lat, lon = lon, from = '2014-01-01', to='2014-12-31', tilt = 32) # year is defined in source file
dat.germany.pv.ts = dat.germany.pv.ts[-1,]
dat.germany.pv       = rbind(
c(NA,as.character(dat.coordinates$lat)),
c(NA,as.character(dat.coordinates$lon)),
dat.germany.pv.ts)
write.csv(dat.germany.pv, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_pv_14.csv")
View(dat.germany.pv.ts)
View(dat.germany.pv)
availability.vec    <- apply(dat.germany.pv[2:nrow(dat.germany.pv),3:ncol(dat.germany.pv)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.pv     <- cbind(availability.vec, t(dat.germany.pv[1:2,3:ncol(dat.germany.pv)]))
availability.pv     <- data.frame(apply(availability.pv, 2, as.numeric))
colnames(availability.pv) <- c("avail", "lati", "long")
radius <- sqrt(availability.pv$avail/pi)
symbols(availability.pv$long, availability.pv$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.pv, aes(x=long,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot + scale_color_gradient(low="brown", high="yellow")
rm(list = ls())
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
wd.path          <- "/Users/claudiaguenther/Documents/dolores/input/"
file.path.export <- "/Users/claudiaguenther/Documents/dolores/input/"
wind.name <- "timeseries_germany_wind_14.csv"
pv.name   <- "timeseries_germany_pv_14.csv"
year <- 14
no.cluster     <- 10
cluster.export.centroid <- TRUE
dat.germany.wind = read.csv(file = paste0(wd.path, "/", wind.name))
dat.germany.pv   = read.csv(file = paste0(wd.path, "/", pv.name))
colnames(dat.germany.wind)[2]   <- "hour"
colnames(dat.germany.pv)[2]     <- "hour"
rownames(dat.germany.wind)[1:2] <- c("lat", "lon")
rownames(dat.germany.pv)[1:2]   <- c("lat", "lon")
dat.germany <- rbind(dat.germany.wind, dat.germany.pv[-c(1:2),])
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tre[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tre[-c(1:2),-c(1:2)], 2, as.numeric))
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
clust.centroid = function(dat, clusters.IND) {
clusters.found = unique(clusters.IND)
centroid.list  = numeric()
for(j in 1:length(clusters.found)){
c   = clusters.found[j]
memb = which(clusters.IND == c)
# Find medoid (shortes distance to other cluster members)
centroid = colMeans(dat[memb,])
# Save centroid
if(j == 1){
centroid.list = centroid
} else {
centroid.list = rbind(centroid.list, centroid)}
}
rownames(centroid.list)  = clusters.found
return(centroid.list)
}
clust.medoid = function(distancematrix, clusters.IND) {
clusters.found = unique(clusters.IND)
cluster.list   = list()
for(j in 1:length(clusters.found)){
c   = clusters.found[j]
memb = which(clusters.IND == c)
# Find medoid (shortes distance to other cluster members)
cluster.list[[j]] = names(which.min(rowSums(distancematrix[memb, memb])))
}
unlist(cluster.list)
}
clusters = cutree(clus, k = no.cluster)
centroids = clust.centroid(dat.germany.tr, clusters)
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.centroid   <-  cluster.k$centers
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
cluster.medoid.IND  = clust.medoid(distancematrix = as.matrix(Dis.ecl), clusters.IND = final.memb)
cluster.medoid.wind = data.frame(t(dat.germany.wind[-c(1:2),paste0("outputV", cluster.medoid.IND)]))
cluster.medoid.pv   = data.frame(t(dat.germany.pv[-c(1:2), paste0("outputV", cluster.medoid.IND)]))
colnames(cluster.medoid.wind) = dat.germany.wind[-c(1:2),]$hour
colnames(cluster.medoid.pv)   = dat.germany.pv[-c(1:2),]$hour
cluster.centroid.wind = data.frame(cluster.centroid[,1:8760])
cluster.centroid.pv   = data.frame(cluster.centroid[,8761:17520])
colnames(cluster.centroid.wind) = dat.germany.wind[-c(1:2),]$hour
colnames(cluster.centroid.pv)   = dat.germany.pv[-c(1:2),]$hour
if (cluster.export.centroid){
write.csv(cluster.centroid.wind, file = paste0(file.path.export, "/", "wind.centroids", no.cluster, "_", year))
write.csv(cluster.centroid.pv,   file = paste0(file.path.export, "/", "pv.centroids", no.cluster, "_", year))
} else {
write.csv(cluster.medoid.wind, file = paste0(file.path.export, "/", "wind.medoids", no.cluster, "_", year))
write.csv(cluster.medoid.pv,   file = paste0(file.path.export, "/", "pv.medoids", no.cluster, "_", year))
}
rm(list = ls())
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "GGally",
"NbClust", "factoextra", "caret", "ggplot2")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
dat.germany.wind = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
dat.germany.pv   = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_pv_14.csv")
colnames(dat.germany.wind)[2]   <- "hour"
colnames(dat.germany.pv)[2]     <- "hour"
rownames(dat.germany.wind)[1:2] <- c("lat", "lon")
rownames(dat.germany.pv)[1:2]   <- c("lat", "lon")
dat.germany <- rbind(dat.germany.wind, dat.germany.pv[-c(1:2),])
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tre[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tre[-c(1:2),-c(1:2)], 2, as.numeric))
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
plot(clus, hang = -1, cex = 0.6)
dendrogram <- as.dendrogram(clus)
plot(dendrogram, ylab = "Height", leaflab = "none")
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 10)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
clusters = cutree(clus, k = 8)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
clusters = cutree(clus, k = 10)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
clusters = cutree(clus, k = 9)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
clusters = cutree(clus, k = 8)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
clusters = cutree(clus, k = 7)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
clusters = cutree(clus, k = 10)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
clusters = cutree(clus, k = 8)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
heatmap(as.matrix(Dis.ecl))
fviz_nbclust(dat.germany.tr, FUN = hcut, method = "silhouette")
clusters = cutree(clus, k = 5)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.wind <- data.frame(rbind(c(0, NA, final.memb), dat.germany.wind))
dat.germany.pv   <- data.frame(rbind(c(0, NA, final.memb), dat.germany.pv))
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
################################################################################
#
# Extract Centroids or Medoids from clusters
#
################################################################################
rm(list = ls())
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
################################################################################
# NOTE: Edit this section only
## Change your wd (location of time series files)
wd.path          <- "/Users/claudiaguenther/Documents/dolores/input/"
# Change path were to export the files to
file.path.export <- "/Users/claudiaguenther/Documents/dolores/input/"
# Give the file names
wind.name <- "timeseries_germany_wind_14.csv"
pv.name   <- "timeseries_germany_pv_14.csv"
# Year of data (2 digit)
year <- 14
## Set the number of clusters (e.g. 2)
no.cluster     <- 8
## Determine wether use want to export centroids (TRUE) or medoids (FALSE)
cluster.export.centroid <- TRUE
################################################################################
################################################################################
# Read in wind and pv data set
dat.germany.wind = read.csv(file = paste0(wd.path, "/", wind.name))
dat.germany.pv   = read.csv(file = paste0(wd.path, "/", pv.name))
colnames(dat.germany.wind)[2]   <- "hour"
colnames(dat.germany.pv)[2]     <- "hour"
rownames(dat.germany.wind)[1:2] <- c("lat", "lon")
rownames(dat.germany.pv)[1:2]   <- c("lat", "lon")
# Bind pv and wind data together
dat.germany <- rbind(dat.germany.wind, dat.germany.pv[-c(1:2),])
# Reshape data (each hour becomes a variable)
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tre[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tre[-c(1:2),-c(1:2)], 2, as.numeric))
# Use euclidean distance
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
# levelplot(as.matrix(Dis.ecl)) # takes very long
# Hierachcal cluster analysis based on Ward & euclidean distance
clus <- hclust(Dis.ecl, method = "ward.D2")
# Function to find centroid in cluster i
clust.centroid = function(dat, clusters.IND) {
clusters.found = unique(clusters.IND)
centroid.list  = numeric()
for(j in 1:length(clusters.found)){
c   = clusters.found[j]
memb = which(clusters.IND == c)
# Find medoid (shortes distance to other cluster members)
centroid = colMeans(dat[memb,])
# Save centroid
if(j == 1){
centroid.list = centroid
} else {
centroid.list = rbind(centroid.list, centroid)}
}
rownames(centroid.list)  = clusters.found
return(centroid.list)
}
# Function to find medoid in clusters i
clust.medoid = function(distancematrix, clusters.IND) {
clusters.found = unique(clusters.IND)
cluster.list   = list()
for(j in 1:length(clusters.found)){
c   = clusters.found[j]
memb = which(clusters.IND == c)
# Find medoid (shortes distance to other cluster members)
cluster.list[[j]] = names(which.min(rowSums(distancematrix[memb, memb])))
}
unlist(cluster.list)
}
# Determine the number of clusters
clusters = cutree(clus, k = no.cluster)
# Get Ward's centroids: Use for k mean initialization
centroids = clust.centroid(dat.germany.tr, clusters)
# Run k means on extracted centroids
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.centroid   <-  cluster.k$centers
# Oberve change of cluster membership
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
# Get medoids
cluster.medoid.IND  = clust.medoid(distancematrix = as.matrix(Dis.ecl), clusters.IND = final.memb)
cluster.medoid.wind = data.frame(t(dat.germany.wind[-c(1:2),paste0("outputV", cluster.medoid.IND)]))
cluster.medoid.pv   = data.frame(t(dat.germany.pv[-c(1:2), paste0("outputV", cluster.medoid.IND)]))
colnames(cluster.medoid.wind) = dat.germany.wind[-c(1:2),]$hour
colnames(cluster.medoid.pv)   = dat.germany.pv[-c(1:2),]$hour
# Get centroids
cluster.centroid.wind = data.frame(cluster.centroid[,1:8760])
cluster.centroid.pv   = data.frame(cluster.centroid[,8761:17520])
colnames(cluster.centroid.wind) = dat.germany.wind[-c(1:2),]$hour
colnames(cluster.centroid.pv)   = dat.germany.pv[-c(1:2),]$hour
# Export medoid/centroids membership to dataframe
if (cluster.export.centroid){
write.csv(cluster.centroid.wind, file = paste0(file.path.export, "/", "wind.centroids", no.cluster, "_", year))
write.csv(cluster.centroid.pv,   file = paste0(file.path.export, "/", "pv.centroids", no.cluster, "_", year))
} else {
write.csv(cluster.medoid.wind, file = paste0(file.path.export, "/", "wind.medoids", no.cluster, "_", year))
write.csv(cluster.medoid.pv,   file = paste0(file.path.export, "/", "pv.medoids", no.cluster, "_", year))
}
rm(list=ls())
