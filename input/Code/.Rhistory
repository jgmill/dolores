dat.coordinates <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
lat = dat.coordinates$lat
lon = dat.coordinates$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.wind = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
availability.vec    <- apply(dat.germany.wind[2:nrow(dat.germany.wind),3:ncol(dat.germany.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, mean)
availability.wind   <- as.matrix(cbind(availability.vec, t(dat.germany.wind[1:2,3:ncol(dat.germany.wind)])))
colnames(availability.wind) <- c("avail", "lati", "long")
ggplot(availability.wind
+ geom_point(aes(x=long, y=lati, colour=as.factor(avail))))
colnames(availability.wind) <- c("avail", "lati", "long")
ggplot(availability.wind
+ geom_point(aes(x=long, y=lati, colour=as.factor(avail))))
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.germany.wind[1:2,3:ncol(dat.germany.wind)])))
colnames(availability.wind) <- c("avail", "lati", "long")
ggplot(availability.wind
+ geom_point(aes(x=long, y=lati, colour=as.factor(avail))))
plot(availability.wind[,1:2])
View(availability.wind)
rm(list = ls())
dat.germany = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "GGally",
"NbClust", "factoextra", "caret", "ggplot2")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
lat = dat.coordinates$lat
lon = dat.coordinates$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.wind = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
availability.vec    <- apply(dat.germany.wind[2:nrow(dat.germany.wind),3:ncol(dat.germany.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, mean)
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.germany.wind[1:2,3:ncol(dat.germany.wind)])))
colnames(availability.wind) <- c("avail", "lati", "long")
ggplot(availability.wind  + geom_point(aes(x=long, y=lati, colour=as.factor(avail))))
environment(availability.wind)
environment(availability.wind) <- "any"
k = availability.wind[,1]
k = availability.wind[,1:2]
ggplot(k  + geom_point(aes(x=avail, y=lati)))
k = availability.wind[,3:2]
ggplot(k  + geom_point(aes(x=long, y=lati)))
View(availability.wind)
scatterplot(avail ~ long | lati, data= availability.wind)
library(car)
scatterplot(avail ~ long | lati, data= availability.wind)
par(mfrow = c(1, 1))
plot(availability.wind$lati, availability.wind$lati, col = availability.wind$avail)
View(availability.wind)
plot(availability.wind$lati, availability.wind$long, col = availability.wind$avail)
legend("topright", levels(simData$FacVar1), fill = simData$FacVar1)
legend("topright", levels(simData$FacVar1), fill = availability.wind$avail)
plot(availability.wind$lati, availability.wind$long, col = availability.wind$avail)
legend("topright", levels(availability.wind$avail), fill = availability.wind$avail)
par(mfrow = c(1, 1))
plot(availability.wind$lati, availability.wind$long, col = availability.wind$avail)
legend("topright", levels(availability.wind$avail), fill = availability.wind$avail)
legend("topright", levels(as.factor(availability.wind$avail)), fill = availability.wind$avail)
radius <- sqrt(availability.wind$avail/pi)
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$lati, availability.wind$long, circles = radius, inches = 0.25, fg = "white",
bg = "red", main = "Sized by availability")
availability.vec    <- apply(dat.germany.wind[2:nrow(dat.germany.wind),3:ncol(dat.germany.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.germany.wind[1:2,3:ncol(dat.germany.wind)])))
colnames(availability.wind) <- c("avail", "lati", "long")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$lati, availability.wind$long, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$lati, availability.wind$long, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
symbols(availability.wind$long, availability.wind$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
?ggplot
ggplot(availability.wind, aes(x=lon,y=lati))
ggplot(availability.wind, aes(x=lon,y=lati, colour = avail))
View(availability.wind)
availability.vec    <- apply(dat.germany.wind[2:nrow(dat.germany.wind),3:ncol(dat.germany.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.germany.wind[1:2,3:ncol(dat.germany.wind)])))
colnames(availability.wind) <- c("avail", "lati", "long")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$long, availability.wind$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0))
ggplot(availability.wind, aes(x=lon,y=lati, colour = avail))
+ geom_point(position=position_jitter(w=0.1,h=0))
+ scale_fill_hue(l=40, c=35)
ggplot(availability.wind, aes(x=lon,y=lati, colour = avail))
+ geom_point(position=position_jitter(w=0.1,h=0))
ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0))
ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0)) + scale_fill_hue(l=40, c=35)
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0))
avail.plot +scale_color_gradient(low="blue", high="red")
radius <- sqrt(availability.wind$avail/pi)
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
dat.germany.pv.ts = ninja_aggregate_solar(lat = lat, lon = lon) # year is defined in source file
dat.germany       = rbind(
c(NA,as.character(dat.coordinates$lat)),
c(NA,as.character(dat.coordinates$lon)),
dat.germany.ts)
dat.germany       = rbind(
c(NA,as.character(dat.coordinates$lat)),
c(NA,as.character(dat.coordinates$lon)),
dat.germany.pv.ts)
View(dat.germany.pv.ts)
write.csv(dat.germany.pv, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_pv_14.csv")
dat.germany.pv       = rbind(
c(NA,as.character(dat.coordinates$lat)),
c(NA,as.character(dat.coordinates$lon)),
dat.germany.pv.ts)
write.csv(dat.germany.pv, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_pv_14.csv")
availability.vec    <- apply(dat.germany.pv[2:nrow(dat.germany.pv),3:ncol(dat.germany.pv)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.germany.pv[1:2,3:ncol(dat.germany.pv)])))
colnames(availability.wind) <- c("avail", "lati", "long")
availability.pv     <- as.data.frame(cbind(availability.vec, t(dat.germany.pv[1:2,3:ncol(dat.germany.pv)])))
colnames(availability.pv) <- c("avail", "lati", "long")
radius <- sqrt(availability.pv$avail/pi)
availability.vec    <- apply(dat.germany.pv[2:nrow(dat.germany.pv),3:ncol(dat.germany.pv)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.pv     <- as.data.frame(cbind(availability.vec, t(dat.germany.pv[1:2,3:ncol(dat.germany.pv)])))
colnames(availability.pv) <- c("avail", "lati", "long")
radius <- sqrt(availability.pv$avail/pi)
availability.vec    <- apply(dat.germany.pv[2:nrow(dat.germany.pv),3:ncol(dat.germany.pv)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.pv     <- as.data.frame(cbind(availability.vec, t(dat.germany.pv[1:2,3:ncol(dat.germany.pv)])))
availability.pv     <- data.frame(apply(availability.pv, 2, as.numeric))
colnames(availability.pv) <- c("avail", "lati", "long")
radius <- sqrt(availability.pv$avail/pi)
symbols(availability.pv$long, availability.pv$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot <- ggplot(availability.pv, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
avail.plot <- ggplot(availability.pv, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
View(availability.pv)
avail.plot <- ggplot(availability.pv, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot + scale_color_gradient(low="blue", high="red")
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
availability.vec    <- apply(dat.germany.wind[2:nrow(dat.germany.wind),3:ncol(dat.germany.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.germany.wind[1:2,3:ncol(dat.germany.wind)])))
colnames(availability.wind) <- c("avail", "lati", "long")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$long, availability.wind$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
availability.vec    <- apply(dat.germany.pv[2:nrow(dat.germany.pv),3:ncol(dat.germany.pv)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.pv     <- cbind(availability.vec, t(dat.germany.pv[1:2,3:ncol(dat.germany.pv)]))
availability.pv     <- data.frame(apply(availability.pv, 2, as.numeric))
colnames(availability.pv) <- c("avail", "lati", "long")
radius <- sqrt(availability.pv$avail/pi)
symbols(availability.pv$long, availability.pv$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.pv, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot + scale_color_gradient(low="blue", high="red")
avail.plot <- ggplot(availability.pv, aes(x=long,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot + scale_color_gradient(low="blue", high="red")
avail.plot + scale_color_gradient(low="blue", high="yellow")
avail.plot <- ggplot(availability.pv, aes(x=long,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot + scale_color_gradient(low="brown", high="yellow")
rm(list = ls())
dat.germany = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "GGally",
"NbClust", "factoextra", "caret", "ggplot2")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
dat.germany.tre           = as.data.frame(t(dat.germany))
dat.germany.wind = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
dat.germany.pv   = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_pv_14.csv")
View(dat.germany.pv)
View(dat.germany)
View(dat.germany.pv)
View(dat.germany.pv)
dat.germany <- rbind(dat.germany.wind, dat.germany.pv[-c(1:2),])
View(dat.germany.pv)
View(dat.germany.wind)
colnames(dat.germany.wind)[2] <- "hour"
colnames(dat.germany.pv)[2]   <- "hour"
dat.germany <- rbind(dat.germany.wind, dat.germany.pv[-c(1:2),])
View(dat.germany)
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tr[2,])
colnames(dat.germany.tre) = unlist(dat.germany.tre[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tre[-c(1:2),-c(1:2)], 2, as.numeric))
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
plot(clus, hang = -1, cex = 0.6)
dendrogram <- as.dendrogram(clus)
plot(dendrogram, ylab = "Height", leaflab = "none")
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 6)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
cluster.center
View(cluster.center)
library(Amelia)
missmap(cluster.center)
missmap(as.data.frame(cluster.center))
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
clusters = cutree(clus, k = 4)
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 4)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tre,
cluster.k$cluster)))
dat.germany.tr           = as.data.frame(t(dat.germany))
colnames(dat.germany.tr) = unlist(dat.germany.tr[2,])
colnames(dat.germany.tr)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tr[-c(1:2),-c(1:2)], 2, as.numeric))
View(dat.germany.tr)
View(dat.germany.tre)
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 4)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
View(dat.germany.tr)
f = rownames(dat.germany.tr)
f
row.names(clusters)
f
rownames(clust.centroid())
rownames(clust.centroid)
rownames(cluster.k$cluster)
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
final.memb
final.table
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(NA, final.memb), dat.germany.tr[-1,])
check <- cbind(cluster = c(final.memb), dat.germany.tr[,])
-1
check <- cbind(cluster = c(final.memb), dat.germany.tr[-1,])
View(dat.germany.tr)
check <- cbind(cluster = c(final.memb), dat.germany.tr[,])
check <- cbind(cluster = c(final.memb), dat.germany.tr)
check$lat <- as.numeric(as.character(check$lat))
View(check)
View(dat.germany)
View(dat.germany.pv)
rownames(dat.germany.wind)[1:2] <- c("lat", "lon")
rownames(dat.germany.pv)[1:2]   <- c("lat", "lon")
dat.germany <- rbind(dat.germany.wind, dat.germany.pv[-c(1:2),])
dat.germany.tr           = as.data.frame(t(dat.germany))
colnames(dat.germany.tr) = unlist(dat.germany.tr[2,])
colnames(dat.germany.tr)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tr[-c(1:2),-c(1:2)], 2, as.numeric))
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 4)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
dat.germany.wind = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
dat.germany.pv   = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_pv_14.csv")
colnames(dat.germany.wind)[2]   <- "hour"
colnames(dat.germany.pv)[2]     <- "hour"
rownames(dat.germany.wind)[1:2] <- c("lat", "lon")
rownames(dat.germany.pv)[1:2]   <- c("lat", "lon")
dat.germany <- rbind(dat.germany.wind, dat.germany.pv[-c(1:2),])
dat.germany.tr           = as.data.frame(t(dat.germany))
colnames(dat.germany.tr) = unlist(dat.germany.tr[2,])
colnames(dat.germany.tr)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tr[-c(1:2),-c(1:2)], 2, as.numeric))
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 4)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tr[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tr[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tre[-c(1:2),-c(1:2)], 2, as.numeric))
View(dat.germany.tre)
dat.germany.tre           = as.data.frame(t(dat.germany))
View(dat.germany.tre)
colnames(dat.germany.tre) = unlist(dat.germany.tr[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
View(dat.germany.tre)
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(as.character(dat.germany.tr[2,]))
colnames(dat.germany.tre) = unlist(dat.germany.tre[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
check <- cbind(cluster = c(final.memb), dat.germany.tre[-1,])
View(dat.germany.tre)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
clusters = cutree(clus, k = 6)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
dat.germany <- rbind( dat.germany.pv[-c(1:2),])
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tre[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tre[-c(1:2),-c(1:2)], 2, as.numeric))
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 5)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
View(dat.germany.tre)
dat.germany <- rbind( dat.germany.pv[,])
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tre[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tre[-c(1:2),-c(1:2)], 2, as.numeric))
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 5)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
dat.germany <- rbind(dat.germany.wind, dat.germany.pv[-c(1:2),])
dat.germany.tre           = as.data.frame(t(dat.germany))
colnames(dat.germany.tre) = unlist(dat.germany.tre[2,])
colnames(dat.germany.tre)[1:2] = c("lat", "lon")
dat.germany.tr           = as.data.frame(apply(dat.germany.tre[-c(1:2),-c(1:2)], 2, as.numeric))
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
fviz_nbclust(dat.germany.tr, FUN = hcut, method = "silhouette")
clusters = cutree(clus, k = 2)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- data.frame((sapply(unique(clusters),
clust.centroid,
dat.germany.tr,
cluster.k$cluster)))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
check <- cbind(cluster = c(final.memb), dat.germany.tre[-c(1:2),])
check$lat <- as.numeric(as.character(check$lat))
check$lon <- as.numeric(as.character(check$lon))
check$cluster <- as.numeric((check$cluster))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
check$lon <- as.numeric(as.character(check$lon))
scatter.hist(check$cluster, check$lat)
scatter.hist(check$cluster, check$lon)
ggplot(check[-1,]) + geom_point(aes(x=lon, y=lat, colour=as.factor(cluster)))
fviz_nbclust(dat.germany.tr, FUN = hcut, method = "wss")
fviz_nbclust(dat.germany.tr, FUN = hcut, method = "silhouette")
