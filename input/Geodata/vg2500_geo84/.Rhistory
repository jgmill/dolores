source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2016-01-01', to='2016-12-31')
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2016-01-01', to='2016-12-31')
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
token = '13acaa28b1df03989474169c5e959dc6014382fb'
'#efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
dat.europe.wind    = rbind(
c(NA,as.character(dat.coordinates.europe$lat)),
c(NA,as.character(dat.coordinates.europe$lon)),
dat.europe.wind.ts)
View(dat.europe.wind.ts)
write.csv(dat.europe.wind, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_europe_wind_16.csv")
write.csv(dat.europe.wind, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_europe_wind_14.csv")
write.csv(dat.europe.wind.ts, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_europe_wind_14_raw.csv")
availability.vec    <- apply(dat.europe.wind[1:nrow(dat.europe.wind),2:ncol(dat.europe.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.europe.wind[1:2,2:ncol(dat.europe.wind)])))
availability.wind   <- as.data.frame(apply(availability.wind, 2, as.numeric))
colnames(availability.wind) <- c("avail", "lati", "long")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$long, availability.wind$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
plot(grid.europe, pch = ".", add = T)
s.world  <- raster::shapefile("/Users/claudiaguenther/Documents/dolores/input/Geodata/europe/ne_110m_admin_0_countries/ne_110m_admin_0_countries.shp")
plot(s.ger)
proj4string(s.ger) # WSG84 projection
s.europe <- s.world[s.world@data$CONTINENT == "Europe",]
s.europe <- s.europe[!(s.europe@data$SOVEREIGNT == "Russia"),] #Exclude Russia
s.europe <- s.europe[!(s.europe@data$SOVEREIGNT == "Iceland"),] #Exclude Iceland
rm(s.world)
plot(s.europe)
proj4string(s.europe) # WSG84 projection
make.grid <- function(starting.lon,starting.lat, lat.spacing, lon.spacing, n.lon){
x1    <- seq(from = starting.lon, to = starting.lon + lon.spacing*n.lon, by = lon.spacing)
n.lat <- n.lon/lon.spacing*lat.spacing
x2    <- seq(from = starting.lat, to = starting.lat + lat.spacing*n.lat, by = lat.spacing)
lon <- rep(x1, length(x2))
lat <- rep(x2, each = length(x1))
grid      <- data.frame(cbind(lon, lat))
return(grid)
}
grid <- make.grid(starting.lon = 6.1, starting.lat = 47.1,
lat.spacing = 0.5, lon.spacing = 0.625,  n.lon = 30)
grid.europe <- make.grid(starting.lon = -10, starting.lat = 35,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 100)
grid        <- SpatialPoints(grid, proj4string = CRS(proj4string(s.ger)))
grid.europe <- SpatialPoints(grid.europe, proj4string = CRS(proj4string(s.europe)))
plot(s.ger)
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid          <- grid[s.ger, ]
grid.europe   <- grid.europe[s.europe, ]
plot(s.ger, x = )
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid.europe <- make.grid(starting.lon = -10, starting.lat = 35,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 80)
grid        <- SpatialPoints(grid, proj4string = CRS(proj4string(s.ger)))
grid.europe <- SpatialPoints(grid.europe, proj4string = CRS(proj4string(s.europe)))
plot(s.ger)
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid.europe <- make.grid(starting.lon = -10, starting.lat = 33,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 80)
grid.europe <- make.grid(starting.lon = -10, starting.lat = 33,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 80)
grid        <- SpatialPoints(grid, proj4string = CRS(proj4string(s.ger)))
grid.europe <- SpatialPoints(grid.europe, proj4string = CRS(proj4string(s.europe)))
plot(s.ger)
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid.europe <- make.grid(starting.lon = -10, starting.lat = 37,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 80)
grid        <- SpatialPoints(grid, proj4string = CRS(proj4string(s.ger)))
grid.europe <- SpatialPoints(grid.europe, proj4string = CRS(proj4string(s.europe)))
plot(s.ger)
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid.europe <- make.grid(starting.lon = -10, starting.lat = 36,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 80)
grid        <- SpatialPoints(grid, proj4string = CRS(proj4string(s.ger)))
grid.europe <- SpatialPoints(grid.europe, proj4string = CRS(proj4string(s.europe)))
plot(s.ger)
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid.europe <- make.grid(starting.lon = -10, starting.lat = 36,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 60)
grid        <- SpatialPoints(grid, proj4string = CRS(proj4string(s.ger)))
grid.europe <- SpatialPoints(grid.europe, proj4string = CRS(proj4string(s.europe)))
plot(s.ger)
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid          <- grid[s.ger, ]
grid.europe   <- grid.europe[s.europe, ]
grid.europe <- make.grid(starting.lon = -10, starting.lat = 36,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 50)
grid        <- SpatialPoints(grid, proj4string = CRS(proj4string(s.ger)))
grid.europe <- SpatialPoints(grid.europe, proj4string = CRS(proj4string(s.europe)))
plot(s.ger)
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid          <- grid[s.ger, ]
grid.europe   <- grid.europe[s.europe, ]
plot(s.ger, x = )
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid.europe <- make.grid(starting.lon = -10, starting.lat = 36,
lat.spacing = 1, lon.spacing = 1.25,  n.lon = 50)
grid        <- SpatialPoints(grid, proj4string = CRS(proj4string(s.ger)))
grid.europe <- SpatialPoints(grid.europe, proj4string = CRS(proj4string(s.europe)))
plot(s.ger)
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
grid          <- grid[s.ger, ]
grid.europe   <- grid.europe[s.europe, ]
plot(s.ger, x = )
plot(grid, pch = ".", add = T)
plot(s.europe)
plot(grid.europe, pch = ".", add = T)
dat.coord            <- coordinates(grid)
dat.coord.europe     <- coordinates(grid.europe)
write.csv(dat.coord, file = "/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
write.csv(dat.coord.europe, file = "/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = '13acaa28b1df03989474169c5e959dc6014382fb'
'#efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
token = '13acaa28b1df03989474169c5e959dc6014382fb'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = '13acaa28b1df03989474169c5e959dc6014382fb'
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
token = '13acaa28b1df03989474169c5e959dc6014382fb'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = '13acaa28b1df03989474169c5e959dc6014382fb'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
token = '13acaa28b1df03989474169c5e959dc6014382fb'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.wind.ts = ninja_aggregate_wind(lat, lon, turbine=turbine, from = '2014-01-01', to='2014-12-31')
dat.europe.wind    = rbind(
c(NA,as.character(dat.coordinates.europe$lat)),
c(NA,as.character(dat.coordinates.europe$lon)),
dat.europe.wind.ts)
write.csv(dat.europe.wind, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_europe_wind_14.csv")
write.csv(dat.europe.wind.ts, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_europe_wind_14_raw.csv")
availability.vec    <- apply(dat.europe.wind[1:nrow(dat.europe.wind),2:ncol(dat.europe.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.europe.wind[1:2,2:ncol(dat.europe.wind)])))
availability.wind   <- as.data.frame(apply(availability.wind, 2, as.numeric))
colnames(availability.wind) <- c("avail", "lati", "long")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$long, availability.wind$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
dat.europe.pv.ts = ninja_aggregate_solar(lat = lat, lon = lon, from = '2014-01-01', to='2014-12-31' ) # year is defined in source file
warnings()
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = '13acaa28b1df03989474169c5e959dc6014382fb'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
dat.europe.pv.ts = ninja_aggregate_solar(lat = lat, lon = lon, from = '2014-01-01', to='2014-12-31' ) # year is defined in source file
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = '13acaa28b1df03989474169c5e959dc6014382fb'
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.pv.ts = ninja_aggregate_solar(lat = lat, lon = lon, from = '2014-01-01', to='2014-12-31' ) # year is defined in source file
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.europe.pv.ts = ninja_aggregate_solar(lat = lat, lon = lon, from = '2014-01-01', to='2014-12-31' ) # year is defined in source file
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/Code/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = '13acaa28b1df03989474169c5e959dc6014382fb'
#'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates        <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates.csv")
dat.coordinates.europe <- read.csv("/Users/claudiaguenther/Documents/dolores/input/Geodata/coordinates_europe.csv")
lat = dat.coordinates$lat
lat = dat.coordinates.europe$lat
lon = dat.coordinates.europe$lon
no.obs = length(lat)
dat.europe.pv.ts = ninja_aggregate_solar(lat = lat, lon = lon, from = '2014-01-01', to='2014-12-31' ) # year is defined in source file
View(dat.europe.pv.ts)
dat.europe.pv.ts = dat.europe.pv.ts[-1,]
dat.europe.pv       = rbind(
c(NA,as.character(dat.coordinates.europe$lat)),
c(NA,as.character(dat.coordinates.europe$lon)),
dat.europe.pv.ts)
write.csv(dat.europe.pv, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_europe_pv_14.csv")
write.csv(dat.europe.pv.ts, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_europe_pv_14_raw.csv")
availability.vec    <- apply(dat.europe.pv[2:nrow(dat.europe.pv),3:ncol(dat.europe.pv)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.pv     <- cbind(availability.vec, t(dat.europe.pv[1:2,3:ncol(dat.europe.pv)]))
availability.pv     <- data.frame(apply(availability.pv, 2, as.numeric))
colnames(availability.pv) <- c("avail", "lati", "long")
radius <- sqrt(availability.pv$avail/pi)
symbols(availability.pv$long, availability.pv$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.pv, aes(x=long,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot + scale_color_gradient(low="brown", high="yellow")
dat.germany.wind = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany_wind_14.csv")
availability.vec    <- apply(dat.germany.wind[1:nrow(dat.germany.wind),2:ncol(dat.germany.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.germany.wind[1:2,2:ncol(dat.germany.wind)])))
availability.wind   <- as.data.frame(apply(availability.wind, 2, as.numeric))
colnames(availability.wind) <- c("avail", "lati", "long")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$long, availability.wind$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
dat.europe.wind = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_europe_wind_14.csv")
availability.vec    <- apply(dat.europe.wind[1:nrow(dat.europe.wind),2:ncol(dat.europe.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.europe.wind[1:2,2:ncol(dat.europe.wind)])))
availability.wind   <- as.data.frame(apply(availability.wind, 2, as.numeric))
colnames(availability.wind) <- c("avail", "lati", "long")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$long, availability.wind$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.wind, aes(x=lon,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
availability.vec    <- apply(dat.germany.wind[1:nrow(dat.germany.wind),2:ncol(dat.germany.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.germany.wind[1:2,2:ncol(dat.germany.wind)])))
availability.wind   <- as.data.frame(apply(availability.wind, 2, as.numeric))
colnames(availability.wind) <- c("avail", "lati", "long")
avail.plot <- ggplot(availability.wind, aes(x=long,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
avail.plot <- ggplot(availability.wind, aes(x=long,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
availability.vec    <- apply(dat.europe.wind[1:nrow(dat.europe.wind),2:ncol(dat.europe.wind)], 2, as.numeric)
availability.vec    <- apply(availability.vec, 2, sum)/8760
availability.wind   <- as.data.frame(cbind(availability.vec, t(dat.europe.wind[1:2,2:ncol(dat.europe.wind)])))
availability.wind   <- as.data.frame(apply(availability.wind, 2, as.numeric))
colnames(availability.wind) <- c("avail", "lati", "long")
radius <- sqrt(availability.wind$avail/pi)
symbols(availability.wind$long, availability.wind$lati, circles = radius, inches = 0.1, fg = "white",
bg = "red", main = "Sized by availability")
avail.plot <- ggplot(availability.wind, aes(x=long,y=lati, colour = avail)) + geom_point(position=position_jitter(w=0.1,h=0), size = 3)
avail.plot +scale_color_gradient(low="blue", high="red")
avail.plot +scale_color_gradient(low="grey", high="blue")
