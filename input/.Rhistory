################################################################################
#
# Clustering of wind and pv time series
#
################################################################################
rm(list = ls())
# Change your wd
dat.germany = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "GGally",
"NbClust", "factoextra", "caret", "ggplot2")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Reshape data (each hour becomes a variable)
dat.germany.tr           = t(dat.germany)
colnames(dat.germany.tr) = dat.germany.tr[2,]
dat.germany.tr           = as.data.frame(apply(dat.germany.tr[-c(1,2),], 2, as.numeric))
dat                      = scale(dat.germany.tr)
# Use euclidean distance
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
# levelplot(as.matrix(Dis.ecl)) # takes very long
# Hierachcal cluster analysis based on Ward & euclidean distance
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
plot(clus, hang = -1, cex = 0.6)
dendrogram <- as.dendrogram(clus)
plot(dendrogram, ylab = "Height", leaflab = "none")
# Function to find medoid in cluster i
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 4)
# Get centroids: Use for k mean initialization
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
# Run k means on extracted centroids
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
# What are unstandardized values ?
final.centers     <- t(sapply(unique(clusters), clust.centroid, dat.germany.tr, cluster.k$cluster))
# Check change of cluster membership
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
# Silouette plot: Check suitability of clustering
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
################################################################################
# Cluster visualization
heatmap(Dis.ecl)
heatmap(as.matrix(Dis.ecl))
rm(list = ls())
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'd3152690710e11a7ccc40f4953849bda7d003dcf'
dat.germany = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
View(dat.germany)
View(dat.germany)
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coordinates_germany_new.csv')
dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
View(dat.coordinates)
dat.germany$X = dat.coordinates$CTR_N
View(dat.germany)
dat.germany   = rbind(dat.coordinates$CTR_N, dat.germany)
View(dat.germany)
dat.germany = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
dat.coordinates$CTR_N
dat.coordinates$GRED_CST
dat.coordinates$CST_N
dat.germany   = rbind(c(NA,NA,dat.coordinates$CST_N), dat.germany)
View(dat.germany)
dat.germany   = rbind(c(NA,NA,as.character(dat.coordinates$CST_N)), dat.germany)
View(dat.germany)
dat.germany = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
dat.germany = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
dat.germany.ts = dat.germany
dat.germany    = rbind(c(NA,NA,as.character(dat.coordinates$CST_N)),
c(NA,NA,as.character(dat.coordinates$Y)),
c(NA,NA,as.character(dat.coordinates$X)),
dat.germany.ts)
View(dat.germany)
write.csv(dat.germany, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
dat.germany = read.csv("/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
dat.germany.tr           = t(dat.germany)
colnames(dat.germany.tr) = dat.germany.tr[2,]
View(dat.germany.tr)
View(dat.germany)
colnames(dat.germany.tr) = dat.germany.tr[3,]
dat.germany.tr           = as.data.frame(apply(dat.germany.tr[-c(1,2),-c(1:3)], 2, as.numeric))
View(dat.germany.tr)
dat.germany.tr           = t(dat.germany)
colnames(dat.germany.tr) = dat.germany.tr[3,]
dat.germany.tr           = as.data.frame(apply(dat.germany.tr[-c(1,2),-c(1:3)], 2, as.numeric))
dat                      = scale(dat.germany.tr)
View(dat.germany.tr)
dat.germany.tr           = t(dat.germany)
colnames(dat.germany.tr) = dat.germany.tr[3,]
View(dat.germany.tr)
View(dat.germany.tr)
View(dat.germany.tr)
dat.germany.tr           = t(dat.germany)
colnames(dat.germany.tr) = dat.germany.tr[3,]
dat.germany.tr           = as.data.frame(apply(dat.germany.tr[-c(1:3),-c(1:3)], 2, as.numeric))
dat                      = scale(dat.germany.tr)
View(dat.germany.tr)
View(dat.germany)
Dis.ecl <- dist(dat.germany.tr, method = "euclidean")
clus <- hclust(Dis.ecl, method = "ward.D2")
plot(clus)
plot(clus, hang = -1, cex = 0.6)
dendrogram <- as.dendrogram(clus)
plot(dendrogram, ylab = "Height", leaflab = "none")
clust.centroid = function(i, dat, clusters.IND) {
ind = (clusters.IND == i)
colMeans(dat[ind,])
}
clusters = cutree(clus, k = 4)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- t(sapply(unique(clusters), clust.centroid, dat.germany.tr, cluster.k$cluster))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
heatmap(as.matrix(Dis.ecl))
fviz_nbclust(dat.germany.tr, FUN = hcut, method = "silhouette")
clusters = cutree(clus, k = 5)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- t(sapply(unique(clusters), clust.centroid, dat.germany.tr, cluster.k$cluster))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
final.memb
clusters = cutree(clus, k = 2)
centroids = t(sapply(unique(clusters), clust.centroid, dat.germany.tr, clusters))
cluster.k          <-  kmeans(dat.germany.tr, centers = centroids)
cluster.center     <-  cluster.k$centers
final.centers     <- t(sapply(unique(clusters), clust.centroid, dat.germany.tr, cluster.k$cluster))
final.table <- table(cluster.k$cluster, clusters) # relatively stable
final.memb  <- cluster.k$cluster
final.memb
sil <- silhouette(final.memb , Dis.ecl)
plot(sil, col=1:2, border=NA)
View(dat.germany)
