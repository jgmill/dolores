#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = '13acaa28b1df03989474169c5e959dc6014382fb'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
# Read in csv file with coordinates from Germany
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
# Optionally: Sort from north to south, east to west
#dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine) # year is define in source file
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine) # year is define in source file
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine) # year is define in source file
rm(list = ls())
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine) # year is define in source file
################################################################################
#
# Download time series from renewables ninja
#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
# Read in csv file with coordinates from Germany
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
# Optionally: Sort from north to south, east to west
#dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine) # year is define in source file
################################################################################
#
# Download time series from renewables ninja
#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
# Read in csv file with coordinates from Germany
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
# Optionally: Sort from north to south, east to west
#dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine
)
################################################################################
#
# Download time series from renewables ninja
#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
# Read in csv file with coordinates from Germany
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
# Optionally: Sort from north to south, east to west
#dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine
)
################################################################################
#
# Download time series from renewables ninja
#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
# Read in csv file with coordinates from Germany
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
# Optionally: Sort from north to south, east to west
#dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine)
################################################################################
#
# Download time series from renewables ninja
#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
# Read in csv file with coordinates from Germany
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
# Optionally: Sort from north to south, east to west
#dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
lat = dat.coordinates$Y[1:200]
lon = dat.coordinates$X[1:200]
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine) # year is define in source file
################################################################################
#
# Download time series from renewables ninja
#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
# Read in csv file with coordinates from Germany
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
# Optionally: Sort from north to south, east to west
#dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
lat = dat.coordinates$Y[201:400]
lon = dat.coordinates$X[201:400]
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
turbine = rep('Vestas+V80+2000', no.obs)
dat.germany.ts = ninja_aggregate_wind(lat, lon, turbine=turbine) # year is define in source file
dat.germany    = rbind(c(NA,NA,as.character(dat.coordinates$CST_N)),
c(NA,NA,as.character(dat.coordinates$Y)),
c(NA,NA,as.character(dat.coordinates$X)),
dat.germany.ts)
View(dat.germany)
dat.germany = dat.germany[-1,]
write.csv(dat.germany, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
availability.vec    <- apply(dat.germany.ts[,2:ncol(dat.germany.ts)], 2, mean)
dat.coordinates.add <- cbind(dat.coordinates, availability.vec)
View(dat.coordinates.add)
View(dat.germany)
View(dat.germany)
View(dat.germany.ts)
dat.germany    = rbind(c(NA,as.character(dat.coordinates$CST_N)),
c(NA,as.character(dat.coordinates$Y)),
c(NA,as.character(dat.coordinates$X)),
dat.germany.ts)
View(dat.germany)
dat.germany    = rbind(
c("latitude",as.character(dat.coordinates$Y)),
c("longitude",as.character(dat.coordinates$X)),
dat.germany.ts)
dat.germany    = rbind(
c("latitude",as.character(dat.coordinates$Y)),
c("longitude",as.character(dat.coordinates$X)),
dat.germany.ts)
c("latitude",as.character(dat.coordinates$Y)
)
dat.germany    = rbind(
c(NA,as.character(dat.coordinates$Y)),
c(NA,as.character(dat.coordinates$X)),
dat.germany.ts)
View(dat.germany)
write.csv(dat.germany, file = "/Users/claudiaguenther/Documents/dolores/input/timeseries_germany.csv")
View(ninja_aggregate_solar)
dat.germany.ts.pv = ninja_aggregate_solar(lat, lon) # year is defined in source file
dat.germany.ts.pv = ninja_aggregate_solar(lat = lat, lon = lon) # year is defined in source file
################################################################################
#
# Download time series from renewables ninja
#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.germany.ts.pv = ninja_aggregate_solar(lat = lat, lon = lon) # year is defined in source file
lat = dat.coordinates$Y
lon = dat.coordinates$X
################################################################################
#
# Download time series from renewables ninja
#
################################################################################
rm(list = ls())
# Change your wd
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
# List all packages needed for session
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
# Install packages (if not already installed)
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
# Load all defined packages
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
################################################################################
# Change your API (from renewables ninja account)
# insert your API authorisation token here
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
# establish your authorisation
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
# Read in csv file with coordinates from Germany
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
# Optionally: Sort from north to south, east to west
#dat.coordinates <- dat.coordinates[order(dat.coordinates$Y, dat.coordinates$X, decreasing = TRUE),]
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
dat.germany.ts.pv = ninja_aggregate_solar(lat = lat, lon = lon) # year is defined in source file
s = ninja_get_solar(47.5, 8.5, tilt=15, azim=135)
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
s = ninja_get_solar(47.5, 8.5, tilt=15, azim=135)
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
neededPackages = c("dplyr", "tidyr", "psych", "cluster", "distances",
"ecodist", "magrittr", "lattice", "MASS", "foreign",
"NbClust", "factoextra", "caret", "ggplot2", "curl")
allPackages    = c(neededPackages %in% installed.packages()[,"Package"])
if (!all(allPackages)) {
missingIDX = which(allPackages == FALSE)
needed     = neededPackages[missingIDX]
lapply(needed, install.packages)
}
lapply(neededPackages, function(x) suppressPackageStartupMessages(
library(x, character.only = TRUE)))
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.coordinates <- read.csv('/Users/claudiaguenther/Documents/dolores/input/coord_25km_25km.csv')
lat = dat.coordinates$Y
lon = dat.coordinates$X
no.obs = length(lat)
dat.germany.ts.pv = ninja_aggregate_solar(lat = lat, lon = lon) # year is defined in source file
paste0('https://www.renewables.ninja/api/data/pv?lat=', lat, '&lon=', lon, '&date_from=', from, '&date_to=', to, '&capacity=', capacity, '&dataset=', dataset, '&system_loss=', system_loss, '&tracking=', tracking, '&tilt=', tilt, '&azim=', azim, '&format=', format)
from='2014-01-01'
to='2014-12-31'
dataset='merra2'
capacity=1
system_loss=10
tracking=0
tilt=35
azim=180
format='csv'
raw = 'false'
paste0('https://www.renewables.ninja/api/data/pv?lat=', lat, '&lon=', lon, '&date_from=', from, '&date_to=', to, '&capacity=', capacity, '&dataset=', dataset, '&system_loss=', system_loss, '&tracking=', tracking, '&tilt=', tilt, '&azim=', azim, '&format=', format)
source('/Users/claudiaguenther/Documents/dolores/input/R/ninja_automator.r')
dat.germany.ts.pv = ninja_aggregate_solar(lat = lat, lon = lon) # year is defined in source file
token = 'efde8da5c66ef97b495ddddf01ef55da4c8a04e6'
h = new_handle()
handle_setheaders(h, 'Authorization'=paste('Token ', token))
dat.germany.ts.pv = ninja_aggregate_solar(lat = lat, lon = lon) # year is defined in source file
wd
wd()
wd = paste0(Sys.getenv("HOME"), "/Documents/dolores/seminar_paper")
wd()
wd
###########################
# IMPORTANT NOTE:
# In order to create the final report, clone the repository from github:
# https://github.com/jgmill/dolores
# and then change the working directory below to where you cloned the repo.
wd = paste0(Sys.getenv("HOME"), "/Documents/dolores/seminar_paper")
knitr::opts_knit$set(root.dir = wd)
library(png)
library(grid)
img = readPNG("images/ger.png")
grid.raster(img)
library(png)
library(grid)
img = readPNG("images/ger.png")
grid.raster(img)
library(png)
library(grid)
img = readPNG("images/ger.png")
grid.raster(img)
library(png)
img = readPNG("images/ger.png")
plot(img)
library(png)
library(png)
img = readPNG("images/ger.png")
imgplot = grid.raster(img)
plot(imgplot)
plot.new()
library(png)
img = readPNG("images/ger.png")
imgplot = grid.raster(img)
plot.new()
rasterImage(img,0,0,1,1)
library(png)
img = readPNG("images/ger.png")
plot.new()
rasterImage(img,0,0,1,1)
